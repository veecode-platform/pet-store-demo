name: Publish spec 

on:
  push:
    branches: [ master ]

jobs:
  publish-spec:
    runs-on: ubuntu-latest
    env:
      MOCK_SERVER: ""
      NAME: ""    
    steps:
      - uses: actions/checkout@v3
      - name: Install yq
        run: |
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x /usr/local/bin/yq
          yq --version

      - name: Publishing spec to mockserver
        if: "${{ env.MOCK_SERVER != '' }}"
        continue-on-error: true
        run: |
          NAME=`echo $GITHUB_REPOSITORY |awk -F / '{print $2 }'`
          touch MOCK.yaml
          yq 'with(.paths; with_entries(.key |=strenv(NAME) + .))' ./openapi-swagger.yaml >> MOCK.yaml
          cat MOCK.yaml | python -c 'import sys, yaml, json; print(json.dumps(yaml.safe_load(sys.stdin.read()), indent=2, sort_keys=False))' > MOCK.json
          curl --max-time 30 -v -X PUT "${{ env.MOCK_SERVER }}/mockserver/openapi$([ ! -z "$API_KEY" ] && echo "?apikey=")" -d "{"specUrlOrPayload": $(cat $PWD/MOCK.json)}"
          echo "Adding mockserver address to spec"
          yq ".servers += [{\"url\": \"${{ env.MOCK_SERVER }}$([[ ! "${{ env.MOCK_SERVER }}" == */ ]] && echo "/")${NAME}\"}]" -i ./openapi-swagger.yaml

      - name: Build devportal template
        env:
          NAME: ""
          PATH_API: ""
          TAGS: "api, demo, sample, petstore"
        run: |
          mkdir -p api/
          NAME=`echo $GITHUB_REPOSITORY |awk -F / '{print $2 }'`
          echo $NAME
          touch "api/$NAME.yaml"
          sed --in-place "s|\"|'|g" ./openapi-swagger.yaml
          yq eval ".apiVersion = \"backstage.io/v1alpha1\"" -i "api/$NAME.yaml"
          yq eval ".kind = \"API\" " -i "api/$NAME.yaml"
          yq eval ".metadata.name=strenv(NAME)" -i "api/$NAME.yaml"
          yq eval ".metadata.title=strenv(NAME)" -i "api/$NAME.yaml"
          yq eval ".metadata.publishedAt=\"$(date '+%Y-%m-%d %T')\"" -i "api/$NAME.yaml"
          yq eval ".metadata.description= \"$(cat ./openapi-swagger.yaml | yq e '.info.description')\"" -i "api/$NAME.yaml"
          yq eval ".metadata.tags = (strenv(TAGS) | sub(\" +\", \"\") | split(\",\"))" -i "api/$NAME.yaml"
          yq eval ".spec.type = \"openapi\"" -i "api/$NAME.yaml"
          yq eval ".spec.lifecycle = \"production\"" -i "api/$NAME.yaml"
          yq eval ".spec.owner = \"consumer\"" -i "api/$NAME.yaml"
          yq eval ".spec.definition = \"$(yq -I4 ./openapi-swagger.yaml)\"" --inplace "api/$NAME.yaml"

      - name: Publish to spec house
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          destination_branch: master
          source_file:  'api'
          destination_repo: veecode-platform/devportal-catalog
          destination_folder: '/'
          user_name: ${{ github.actor }}
          commit_message: 'Pipeline commit'
